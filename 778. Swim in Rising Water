import heapq

class Solution:
    def swimInWater(self, grid):
        n = len(grid)
        visited = [[False] * n for _ in range(n)]
        directions = [(1, 0), (-1, 0), (0, 1), (0, -1)]
        
        heap = [(grid[0][0], 0, 0)]  # (time, row, col)
        visited[0][0] = True
        time = 0
        
        while heap:
            t, r, c = heapq.heappop(heap)
            time = max(time, t)
            
            if r == n - 1 and c == n - 1:
                return time
            
            for dr, dc in directions:
                nr, nc = r + dr, c + dc
                if 0 <= nr < n and 0 <= nc < n and not visited[nr][nc]:
                    visited[nr][nc] = True
                    heapq.heappush(heap, (grid[nr][nc], nr, nc))
