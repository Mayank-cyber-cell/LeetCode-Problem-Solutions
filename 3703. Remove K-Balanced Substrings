class Solution:
    def removeSubstring(self, s, k):
        stack = []  # store (char, count)
        
        for char in s:
            if stack and stack[-1][0] == char:
                stack[-1][1] += 1
            else:
                stack.append([char, 1])
            
            # Check for k-balanced pattern
            while len(stack) >= 2:
                if stack[-2][0] == '(' and stack[-2][1] >= k and stack[-1][0] == ')' and stack[-1][1] >= k:
                    # Remove k from both counts
                    stack[-2][1] -= k
                    stack[-1][1] -= k
                    # Remove element if count becomes 0
                    if stack[-2][1] == 0:
                        stack.pop(-2)
                    if stack[-1][1] == 0:
                        stack.pop(-1)
                else:
                    break
        
        # Reconstruct string
        res = []
        for char, count in stack:
            res.append(char * count)
        return ''.join(res)
